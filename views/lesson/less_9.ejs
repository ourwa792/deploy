<%#- include('../partial/head.ejs') %>

<!-- <script src="/library/createjs.js"></script>
<script src="/library/zim_min.js"></script>  -->

</head>

<body style="margin: 0; padding: 0" lang="ar" dir="rtl">



    <script type="module">

        const title = String.raw` <%= lesson.title %>`;
        const url = String.raw` <%= lesson.cover.url %> `


        import zim from "https://zimjs.org/cdn/016/zim_game.js";

        const scaling = FIT;
        const width = 1240;
        const height = 868;

        const assets = ["titlanmat3.png","anmatmn3.png",
        "pragma_wink.png", 'tahakak.png', 'fawaki.png' ];
        const path = "/assets/";

        var frame = new Frame({
            scaling,
            width,height,
            color: light,
            allowDefault: true,
            assets,
            path,
            progress: new Waiter({ backgroundColor: blue, corner: 10 }),
        });

        frame.on("ready", function ready() {
            var stage = frame.stage;
            let stageW = frame.width;
            let stageH = frame.height;

              //new Poly(200, 5, .6, pink)//.center();
           
            const sound1 = new Aud({ file: "/sound/fawaki.mp3", volume: .8, loop: false,  
            maxNum: 1, interrupt: "any" });           

            const wrongSound = new Aud({file: "/sound/wronganswer.mp3", volume: .8, loop: false,
            maxNum: 1, interrupt: "any" });    
            const rightSound = new Aud({file: "/sound/rightanswer.mp3", volume: .8, loop: false,
            maxNum: 1, interrupt: "any" });    

            STYLE = { width: W / 2, color: series( "gold", 'aqua', "lightpink") };

            const page0 = new Page();
            const page1 = new Page();
            const page2 = new Page();
            const page3 = new Page();
            const page4 = new Page();
            const page5 = new Page();
            const page6 = new Page();
            const page7 = new Page();
            const pages = [page0, page1, page2, page3, page4, page5];


            const colorPicker = new ColorPicker().center().hide();  
            const emitter = new Emitter({
                obj: new Poly([30, 50, 80], 5, .5, [yellow, silver, grey, red]),
                gravity: 0,
                force: { min: 3, max: 6 },
                startPaused: true
            })


            //page -0-
            const pic = new Pic("titlanmat3.png").sca(.9).pos(15, 40).addTo(page0)
            const lab = new Label({
                text:"أتعلم:",
                align: RIGHT,
                size:100,
                backgroundBorderColor:red,
                color:red,
                rollColor:red,
                bold:true,
                italic:true
            }).loc(90,200,pic)
            .animate({props: {scaleY:0.4}, time:4, rewind:true, loop:true,});

            new Emoji("\u270f\ufe0f", 100).loc(0,200,pic);

            const lab2 = new Label({
                text:"عبّر نطقاً عن الأنماط التالية:",
                align: RIGHT,
                size:60,
                backgroundBorderColor:red,
                color:white,
                rollColor:red,
                bold:true,
                italic:true
            })
            lab2.pos(80,360,RIGHT,BOTTOM,page0)
            .animate({props: {scaleY:0.4}, time:4, rewind:true, loop:true,});



            //page -1-
            new Pic("anmatmn3.png").loc(10,200,page1)
            new Button({
                label:"اسمع الصوت",
                width:160,
                height:60,
                backgroundColor:"purple",
                rollBackgroundColor:"MediumOrchid",
                borderWidth:8,
                borderColor:"violet",
                gradient:.3,
                corner:10
            }).loc(40,400,page1)
            .tap(()=> sound1.play())
            new Button({
                label:"اسمع الصوت",
                width:160,
                height:60,
                backgroundColor:"purple",
                rollBackgroundColor:"MediumOrchid",
                borderWidth:8,
                borderColor:"violet",
                gradient:.3,
                corner:10
            }).loc(400,400,page1)
            .tap(()=> sound2.play())

            const animation = new Sprite({
                image: "pragma_wink.png",
                style: false,
                cols: 6,
                rows: 5,
            }).loc(20, 500, page1)

            .run({wait:2, time:5, rewind:true, rewindWait:3, loop:true, loopWait:2})

            //page -2-

            const lb = new Label({
                text:"أتحقق:" ,
                align: RIGHT,
                size:60,
                backgroundBorderColor:blue,
                backgroundBorderWidth:4,
                color:white,
                rollColor:red,
                bold:true,
                italic:true
            })
            .pos(-50,40).addTo(page2)

            new Emoji('\u270f\ufe0f', 60).loc(0,20,lb)
           
            const la = new Label({
                text:"أكمل النمط التالي بالألوان المناسبة:" ,
                align: CENTER,
                size:47,
                backgroundBorderColor:blue,
                backgroundBorderWidth:4,
                color:white,
                rollColor:red,
                bold:true,
                italic:true
            }).center(page2);

            asset("tahakak.png").pos(10,500).addTo(page2).sca(.9)

            
            //page -3-

        
            const circleRadius = 35; 
            const spacing = 5; 
            const circles = []; 
            const circleColors = [
                "red", "yellow", "lightblue" 
            ];

            let startY = 30; 
            circleColors.forEach((color, index) => {
                const circle = new Circle(circleRadius, color).pos(stageW/4, startY)
                .addTo(page3);
                circles.push(circle); 

                startY += circleRadius * 2 + spacing; 
            });

            function createCircle(x, y, page) {
                const circle = new Circle(35, white).pos(x, y).cur().addTo(page);

                circle.on("mousedown", function () {
                    const colorPicker = new ColorPicker();
                    colorPicker.show();
                    colorPicker.change(() => {
                        circle.color = colorPicker.selectedColor; 
                        colorPicker.hide();
                    });
                });

                return circle;
            }

            // تحديد مواضع الدوائر
            const positionsWhite = [
                { x: stageW / 4, y: 255 },
                { x: stageW / 4, y: 330 },
                { x: stageW / 4, y: 405 },
                { x: stageW / 4, y: 480 },
                { x: stageW / 4, y: 555 },
                { x: stageW / 4, y: 630 },
            ];

            positionsWhite.forEach(pos => createCircle(pos.x, pos.y, page3));

           
            // page -4-

            asset("fawaki.png").sca(1.1).rot(-90).pos(stageW/4,10).addTo(page4).drag()

            const correctAnswers = ["تفاحة", "موزة","برتقالة"];

            const answers = [];  // مصفوفة لحفظ مربعات النص
            const positions = [{x: 330, y: 650}, {x: 330, y: 700}, {x:330, y:750}];  // مواضع الفراغات

            positions.forEach((pos, index) => {
                const answerField = new Label({
                    text: ".........",
                    size: 30,
                    font: "Comic Sans",
                    color: black
                }).pos(pos.x, pos.y).addTo(page4).cur();
                    
                const textEditor = new TextEditor({
                    colorList: true,  
                    optionList: ["bold", "italic", "align"],  
                    sizeList: [20, 30, 40] 
                });

                answerField.on("click", () => {
                    textEditor.show(answerField);
                });

                answers.push(answerField);
            });
            // زر التحقق من الإجابات
            new Button({
                label:"تحقق",
                width:150,
                height:60,
                backgroundColor:"purple",
                rollBackgroundColor:"MediumOrchid",
                borderWidth:8,
                borderColor:"violet",
                gradient:.3,
                corner:10,
                color: "white"
            }).pos(100, 150).addTo(page4)
            .on("click", () => {
                let correct = true;
                answers.forEach((answerField, index) => {
                    const userAnswer = answerField.text.trim();
                    if (userAnswer !== correctAnswers[index]) {
                        correct = false;
                        answerField.color = "red";  // إجابة خاطئة
                        answerField.bold = true
                    } else {
                        answerField.color = "green";  // إجابة صحيحة
                        rightSound.play()
                    }
                });
                // عرض النتيجة
                if (correct) {
                    rightSound.play();
                    emitter.spurt(40).center(page4)
                } else {
                    wrongSound.play();
                }
            });

            new Button({
                label:"تحدث",
                width:150,
                height:60,
                backgroundColor:"purple",
                rollBackgroundColor:"MediumOrchid",
                borderWidth:8,
                borderColor:"violet",
                gradient:.3,
                corner:10,
                color: "white"
            }).pos(100, 350).addTo(page4)
            .tap(()=> {
                sound1.play()
            })


            //page -5-

            
            const l = new Label({
                text:"أكمل النمط الآتي بالألوان المناسبة:",
                align: CENTER,
                size:40,
                backgroundBorderColor:red,
                color:orange,
                rollColor:yellow,
                bold:true,
                italic:true
            }).pos(60,90).addTo(page5);
            new Emoji("\ud83d\ude0a", 100).pos(90,190).addTo(page5).cur().drag()

            function createTraingle(x, y, page) {
                const tria = new Triangle(60,60,60, white, black, 2.1).pos(x, y).cur().addTo(page);

                tria.on("mousedown", function () {
                    const colorPicker = new ColorPicker();
                    colorPicker.show();
                    colorPicker.change(() => {
                        tria.color = colorPicker.selectedColor; 
                        colorPicker.hide();
                    });
                });

                return tria;
            }
  
            new Triangle(60,60,60, red , black, 2.1).loc(stageW/4, 255, page5) .animate({obj:{rotation:360}, time:5, ease:"linear", loop:true});
            new Triangle(60,60,60, blue , black, 2.1).loc(stageW/4, 330, page5) .animate({obj:{rotation:360}, time:5, ease:"linear", loop:true});
            new Triangle(60,60,60, yellow , black, 2.1).loc(stageW/4, 405, page5) .animate({obj:{rotation:360}, time:5, ease:"linear", loop:true});

            const posTraingle = [
                { x: stageW / 4 - 25, y: 455 },
                { x: stageW / 4 - 25, y: 535 },
                { x: stageW / 4 - 25, y: 610 },
            ];

            posTraingle.forEach(pos => createTraingle(pos.x, pos.y, page5));



         
            const book = new Book({width:W - 30, height: H - 30, pages: pages,
            startPage: 1, radius:120}).center()
            //zog(book)
            stage.update()

        })

    </script>



</body>

</html>